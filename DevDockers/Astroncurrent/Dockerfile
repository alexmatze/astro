
ADD file:c753df38640ab6e246d9e66f0cef7156b7003976080b1e0b83e5717cd6ef1725 in /
RUN set -xe && echo '#!/bin/sh' > /usr/sbin/policy-rc.d && echo 'exit 101' >> /usr/sbin/policy-rc.d && chmod +x /usr/sbin/policy-rc.d && dpkg-divert --local --rename --add /sbin/initctl && cp -a /usr/sbin/policy-rc.d /sbin/initctl && sed -i 's/^exit.*/exit 0/' /sbin/initctl && echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup && echo 'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };' > /etc/apt/apt.conf.d/docker-clean && echo 'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };' >> /etc/apt/apt.conf.d/docker-clean && echo 'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";' >> /etc/apt/apt.conf.d/docker-clean && echo 'Acquire::Languages "none";' > /etc/apt/apt.conf.d/docker-no-languages && echo 'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";' > /etc/apt/apt.conf.d/docker-gzip-indexes && echo 'Apt::AutoRemove::SuggestsImportant "false";' > /etc/apt/apt.conf.d/docker-autoremove-suggests
RUN rm -rf /var/lib/apt/lists/*
RUN sed -i 's/^#\s*\(deb.*universe\$/\1/g' /etc/apt/sources.list
RUN mkdir -p /run/systemd && echo 'docker' > /run/systemd/container
CMD "/bin/bash"
LABEL maintainer=Sarrvesh Sridhar <sarrvesh@astron.nl>
RUN apt-get update && apt-get --yes install --no-install-recommends bison build-essential cmake flex g++ gcc gettext-base gfortran git libarmadillo-dev libblas-dev libboost-date-time-dev libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-python-dev libboost-regex-dev libboost-signals-dev libboost-system-dev libboost-thread-dev libcfitsio3-dev libcfitsio-dev libfftw3-dev libgsl-dev libgtkmm-3.0-dev libhdf5-serial-dev liblapacke-dev liblapack-dev liblog4cplus-1.1-9 liblog4cplus-dev libncurses5-dev libpng-dev libpython2.7-dev libreadline-dev libxml2-dev openssh-server python python-numpy python-pip python-setuptools subversion vim wcslib-dev wget && rm -rf /var/lib/apt/lists/*
RUN pip install pip -U && pip install astropy==2.0.4 matplotlib pp pyfits pyvo python-monetdb scipy wcsaxes xmlrunner
RUN mkdir data && cd data && wget ftp://anonymous@ftp.astron.nl/outgoing/Measures/WSRT_Measures.ztar && tar xf WSRT_Measures.ztar && rm WSRT_Measures.ztar && cd / && wget https://github.com/casacore/casacore/archive/v2.4.1.tar.gz && tar xvf v2.4.1.tar.gz && cd casacore-2.4.1 && mkdir build && cd build && cmake -DBUILD_PYTHON=True -DENABLE_TABLELOCKING=ON -DDATA_DIR=/data -DUSE_OPENMP=ON -DUSE_THREADS=Off -DUSE_FFTW3=TRUE -DUSE_HDF5=ON -DCXX11=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-fsigned-char -O2 -DNDEBUG -march=native" ../ && make -j; make install; cd /; rm -rf /v2.4.1.tar.gz /casacore-2.4.1/
RUN git clone https://github.com/casacore/casarest.git && cd casarest/ && mkdir build && cd build && cmake ../ && make -j && make install && cd / && rm -rf /casarest/
RUN pip install python-casacore
RUN wget https://sourceforge.net/projects/aoflagger/files/latest/download && tar xvf download && cd aoflagger-2.10.0/ && mkdir build && cd build && cmake ../ && make -j && make install && cd / && rm -rf /aoflagger-2.10.0 /download
RUN git clone https://github.com/lofar-astron/PyBDSF.git && cd PyBDSF/ && python setup.py install && rm -rf /PyBDSF/
RUN svn --non-interactive -q co https://svn.astron.nl/LOFAR/tags/LOFAR-Release-3_0_14/ source && cd source && mkdir -p build/gnucxx11_optarch && cd build/gnucxx11_optarch && mkdir /opt/LOFAR/ && cmake -DBUILD_PACKAGES=Offline -DBUILD_TESTING=OFF -DCMAKE_INSTALL_PREFIX=/opt/LOFAR/ -DUSE_OPENMP=True ../../ && make -j && make install && cd / && rm -rf /source
RUN wget https://sourceforge.net/projects/wsclean/files/wsclean-2.5/wsclean-2.5.tar.bz2 && tar xvf wsclean-2.5.tar.bz2 && mkdir /wsclean-2.5/build && cd /wsclean-2.5/build && cmake -DBUILD_SHARED_LIBS=TRUE -DCMAKE_PREFIX_PATH=/opt/LOFAR/ ../ && make -j && make install && cd / && rm -rf /wsclean-2.5 /wsclean-2.5.tar.bz2
RUN git clone https://github.com/darafferty/LSMTool.git && cd LSMTool && python setup.py install && cd / && rm -rf LSMTool
RUN git clone https://github.com/lofar-astron/RMextract.git; cd RMextract && python setup.py install && cd / && rm -rf /RMextract
RUN wget https://github.com/revoltek/losoto/archive/1.0.1.tar.gz && tar xvf 1.0.1.tar.gz && cd losoto-1.0.1/ && python setup.py install && cd / && rm -rf losoto-1.0.1/
RUN git clone https://github.com/aroffringa/dysco.git && cd dysco && mkdir build && cd build && cmake ../ && make -j && make install && cd / && rm -rf dysco
RUN wget https://github.com/lofar-astron/factor/archive/v1.3.tar.gz && tar xvf v1.3.tar.gz && cd /factor-1.3/ && python setup.py install && cd / && rm -rf /v1.3.tar.gz /factor-1.3/
RUN wget https://github.com/lofar-astron/prefactor/archive/V2.0.3.tar.gz && tar xvf V2.0.3.tar.gz && mv prefactor-2.0.3 /opt/prefactor && rm V2.0.3.tar.gz
RUN groupadd -g 32756 lofaruser && useradd -m -r -u 32756 -g lofaruser lofaruser
RUN ssh-keygen -t rsa -f sshkeys -q -N "" && mkdir /home/lofaruser/.ssh && mv sshkeys /home/lofaruser/.ssh/id_rsa && cat sshkeys.pub >> /home/lofaruser/.ssh/authorized_keys && echo "Host localhost\n StrictHostKeyChecking no" >> /home/lofaruser/.ssh/config && chown -R lofaruser /home/lofaruser/.ssh && chown -R :lofaruser /home/lofaruser/.ssh && echo "export PATH=/opt/LOFAR/sbin:/opt/LOFAR/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" >> /home/lofaruser/.profile && echo "export LD_LIBRARY_PATH=/opt/LOFAR/lib:/usr/local/lib/" >> /home/lofaruser/.profile && echo "export PYTHONPATH=/opt/LOFAR/lib/python2.7/site-packages:/usr/local" >> /home/lofaruser/.profile
ENTRYPOINT "/bin/sh" "-c" "service ssh start && su - lofaruser"
